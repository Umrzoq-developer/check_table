{"version":3,"sources":["components/MainTable.js","redux/table/tableAction.js","components/ObedenitTable.js","components/KorzinkaTable.js","App.js","redux/table/tableReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["connect","state","obidinet","table","addKorzinka","item","type","payload","addObidinet","removeTable","useState","id","name","selected","contentMine","setContentMine","className","onChange","e","checked","target","map","data","key","onClick","length","korzinka","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49fc5fae.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport {addObidinet, addKorzinka, removeTable} from \"../redux/table/tableAction\";\r\n\r\n\r\n\r\nconst MainTable = ({addObidinet, addKorzinka, removeTable}) => {\r\n    const [contentMine, setContentMine] = useState([\r\n        {id: 101, name: \"Clothes\", selected: false},\r\n        {id: 102, name: \"Sneakers\", selected: false},\r\n        {id: 103, name: \"Fruits\", selected: false},\r\n        {id: 104, name: \"Furnitures\", selected: false},\r\n        {id: 105, name: \"Sofa\", selected: false},\r\n        {id: 106, name: \"Car\", selected: false},\r\n        {id: 107, name: \"Cap\", selected: false},\r\n        {id: 108, name: \"Boot\", selected: false},\r\n        {id: 109, name: \"Shirt\", selected: false},\r\n    ]);\r\n\r\n    const addToObidinet = () => {\r\n        contentMine.map(data => {\r\n            if (data.selected){\r\n                addObidinet(data);\r\n                data.selected=false;\r\n            }\r\n            return data\r\n        })\r\n    };\r\n\r\n    const addToKorzinka = () => {\r\n        contentMine.map(data => {\r\n            if (data.selected){\r\n                addKorzinka(data);\r\n                data.selected=false;\r\n            }\r\n            return data\r\n        })\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='table table-bordered'>\r\n                <thead>\r\n                    <th>\r\n                        <input\r\n                            className='form-control form-check'\r\n                            type=\"checkbox\"\r\n                            onChange={e => {\r\n                                let checked = e.target.checked;\r\n                                setContentMine(contentMine.map(data => {\r\n                                    data.selected=checked;\r\n                                    return data\r\n                                }))\r\n                            }}\r\n                        />\r\n                    </th>\r\n                    <th>Id:</th>\r\n                    <th>Name:</th>\r\n                </thead>\r\n                <tbody>\r\n                {contentMine.map(item => {\r\n                    return (\r\n                        <tr key={item.id}>\r\n                            <td className='w-25'>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={item.selected}\r\n                                    onChange={(e) => {\r\n                                        let checked = e.target.checked;\r\n                                        setContentMine(contentMine.map(data => {\r\n                                            if (item.id === data.id){\r\n                                                data.selected=checked\r\n                                            }\r\n                                            return data\r\n                                        }))\r\n                                    }}\r\n                                    className='form-check form-control'/>\r\n                            </td>\r\n                            <td className='w-25'>\r\n                                {item.id}\r\n                            </td>\r\n                            <td className='w-25'>\r\n                                {item.name}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </div>\r\n            <div className='d-flex justify-content-around'>\r\n                <button onClick={addToObidinet} className='btn btn-primary'>Obidinet</button>\r\n                <button onClick={addToKorzinka} className='btn btn-success'>Korzinka</button>\r\n                <button onClick={removeTable} className='btn btn-danger'>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        obidinet: state.table.obidinet\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addKorzinka, addObidinet, removeTable})(MainTable)\r\n","export const ADD_OBIDINET_TABLE = 'ADD_OBIDINET_TABLE';\r\nexport const ADD_KORZINKA_TABLE = 'ADD_KORZINKA_TABLE';\r\nexport const REMOVE_TABLE = 'REMOVE_TABLE';\r\n\r\n\r\nexport const addObidinet = (item) => {\r\n    return{\r\n        type: ADD_OBIDINET_TABLE,\r\n        payload: item\r\n    }\r\n};\r\n\r\nexport const addKorzinka = (item) => {\r\n    return{\r\n        type: ADD_KORZINKA_TABLE,\r\n        payload: item\r\n    }\r\n};\r\n\r\nexport const removeTable = () => {\r\n    return{\r\n        type: REMOVE_TABLE\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst ObedenitTable = ({obidinet}) => {\r\n    return (\r\n        <div className='mb-5'>\r\n            <h1>Ajratilganlar: </h1>\r\n            {\r\n                obidinet.length > 0 ?\r\n                <div className='table table-bordered'>\r\n                    <thead>\r\n                    <th>Id:</th>\r\n                    <th>Name:</th>\r\n                    </thead>\r\n                    <tbody>\r\n                    {obidinet.map(item => {\r\n                        return (\r\n                            <tr key={item.id}>\r\n                                <td className='w-25'>\r\n                                    {item.id}\r\n                                </td>\r\n                                <td className='w-25'>\r\n                                    {item.name}\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </div> : <p className='text-center text-warning'>There is not data</p>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        obidinet: state.table.obidinet\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ObedenitTable)\r\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst KorzinkaTable = ({korzinka}) => {\r\n    return (\r\n        <div className='mt-5'>\r\n            <h1>Korzinka: </h1>\r\n            {\r\n                korzinka.length > 0 ?\r\n                <div className='table table-active'>\r\n                    <thead>\r\n                    <th>Id:</th>\r\n                    <th>Name:</th>\r\n                    </thead>\r\n                    <tbody>\r\n                    {korzinka.map(item => {\r\n                        return (\r\n                            <tr key={item.id}>\r\n                                <td className='w-25'>\r\n                                    {item.id}\r\n                                </td>\r\n                                <td className='w-25'>\r\n                                    {item.name}\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </div> : (<p className='text-warning text-center'>There is not data</p>)\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        korzinka: state.table.korzinka\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(KorzinkaTable)\r\n","import React from 'react';\nimport {connect} from 'react-redux';\n\n//components\nimport MainTable from \"./components/MainTable\";\nimport ObedenitTable from \"./components/ObedenitTable\";\nimport KorzinkaTable from \"./components/KorzinkaTable\";\n\nconst App = () => {\n\n    return (\n        <div className=\"container\">\n            <h1 className='text-center'>Table Example</h1>\n            <div className='row mt-5'>\n                {/*Main Table*/}\n                <div className=\"col-md-6 w-100\">\n                    <MainTable/>\n                </div>\n\n                {/*Changes Table*/}\n                <div className=\"col-md-6 d-flex flex-column\">\n                  {/*Obedinet Table*/}\n                    <ObedenitTable/>\n\n                  {/*Korzinka Table*/}\n                    <KorzinkaTable/>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\n\nexport default connect()(App);\n","import {ADD_KORZINKA_TABLE, ADD_OBIDINET_TABLE, REMOVE_TABLE} from \"./tableAction\";\r\n\r\nconst initialState = {\r\n    obidinet: [],\r\n    korzinka: []\r\n};\r\n\r\n\r\nexport default (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_OBIDINET_TABLE:\r\n            return{\r\n                ...state,\r\n                obidinet: [...state.obidinet, action.payload]\r\n            };\r\n        case ADD_KORZINKA_TABLE:\r\n            return {\r\n                ...state,\r\n                korzinka: [...state.korzinka, action.payload]\r\n            };\r\n        case REMOVE_TABLE:\r\n            return {\r\n                ...state,\r\n                obidinet: [],\r\n                korzinka: []\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport tableReducer from \"./table/tableReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    table: tableReducer\r\n});\r\n","import {createStore} from \"redux\";\r\nimport {rootReducer} from \"./rootReducer\";\r\n\r\nexport const store = createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}